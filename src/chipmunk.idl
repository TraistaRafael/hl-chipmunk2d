
// ---------------------------------------------------------------------------------------------------------
// chipmunk_types.h
//----------------------------------------------------------------------------------------------------------
typedef cpFloat double;
typedef cpBool uchar;

interface cpVect
{
	void cpVect();
	attribute cpFloat x;
    attribute cpFloat y;
};

interface cpTransform {
	void cpTransform();
	attribute cpFloat a;
	attribute cpFloat b;
	attribute cpFloat c;
	attribute cpFloat d;
	attribute cpFloat tx; 
	attribute cpFloat ty;
};

interface cpMat2x2 {
	void cpMat2x2();
	attribute cpFloat a; 
	attribute cpFloat b;
	attribute cpFloat c;
	attribute cpFloat d;
};


// ---------------------------------------------------------------------------------------------------------
// cpBB.h
//----------------------------------------------------------------------------------------------------------
interface cpBB
{
    void cpBB();
    attribute cpFloat l;
    attribute cpFloat b;
    attribute cpFloat r;
    attribute cpFloat t;
	
	[Static,AddressOf] cpBB cpBBNew([Const] cpFloat l, [Const] cpFloat b, [Const] cpFloat r, [Const] cpFloat t);
	[Static,AddressOf] cpBB cpBBNewForExtents([Const,Deref] cpVect c, [Const] cpFloat hw, [Const] cpFloat hh);
	[Static,AddressOf] cpBB cpBBNewForCircle([Const,Deref] cpVect p, [Const] cpFloat r);
	[Static] cpBool cpBBIntersects([Const,Deref] cpBB a, [Const,Deref] cpBB b);
	[Static] cpBool cpBBContainsBB([Const,Deref] cpBB bb, [Const,Deref] cpBB other);
	[Static] cpBool cpBBContainsVect([Const,Deref] cpBB bb, [Const,Deref] cpVect v);
	[Static,AddressOf] cpBB cpBBMerge([Const,Deref] cpBB a, [Const,Deref] cpBB b);
	[Static,AddressOf] cpBB cpBBExpand([Const,Deref] cpBB bb, [Const,Deref] cpVect v);
	[Static,AddressOf] cpVect cpBBCenter([Deref] cpBB bb);
	[Static] cpFloat cpBBArea([Deref] cpBB bb);
	[Static] cpFloat cpBBMergedArea([Deref] cpBB a, [Deref] cpBB b);
	[Static] cpFloat cpBBSegmentQuery([Deref] cpBB bb, [Deref] cpVect a, [Deref] cpVect b);
	[Static] cpBool cpBBIntersectsSegment([Deref] cpBB bb, [Deref] cpVect a, [Deref] cpVect b);
	[Static,AddressOf] cpVect cpBBClampVect([Const,Deref] cpBB bb, [Const,Deref] cpVect v);
	[Static,AddressOf] cpVect cpBBWrapVect([Const,Deref] cpBB bb, [Const,Deref] cpVect v);
	[Static,AddressOf] cpBB cpBBOffset([Const,Deref] cpBB bb, [Const,Deref] cpVect v);
};


// ---------------------------------------------------------------------------------------------------------
// chipmunk.h
//----------------------------------------------------------------------------------------------------------
interface Chipmunk2D 
{
	[Static] cpFloat cpMomentForCircle(cpFloat m, cpFloat r1, cpFloat r2, [Deref] cpVect offset);

	[Static] cpFloat cpAreaForCircle(cpFloat r1, cpFloat r2);
	
	[Static] cpFloat cpMomentForSegment(cpFloat m, [Deref,Cast="cpVect*"] cpVect a, [Deref] cpVect b, cpFloat radius);
	
	[Static] cpFloat cpMomentForPoly( cpFloat m, int count, [Const,Cast="cpVect*"] double[] verts, 
							[Deref] cpVect offset, cpFloat radius);

	[Static] cpFloat cpAreaForSegment([Deref] cpVect a, [Deref] cpVect b, cpFloat radius);

	[Static] cpFloat cpAreaForPoly([Const] int count, [Const,Cast="cpVect*"] double[] verts, cpFloat radius);

	[Static,AddressOf] cpVect cpCentroidForPoly([Const] int count, [Cast="cpVect*"] double[] verts);

	[Static] cpFloat cpMomentForBox(cpFloat m, cpFloat width, cpFloat height);

	[Static] cpFloat cpMomentForBox2(cpFloat m, [Deref] cpBB box);

	[Static] int cpConvexHull(int count,  [Const,Cast="cpVect*"] double[] verts, 
							[Cast="cpVect*"] double[] result, int[] first, cpFloat tol);

	[Static,AddressOf] cpVect cpClosetPointOnSegment( [Deref] cpVect p, 
							 [Deref] cpVect a, [Deref] cpVect b);


};
